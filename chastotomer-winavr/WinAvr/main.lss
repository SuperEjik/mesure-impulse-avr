
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000b6a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00000b6a  00000bfe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000020  00800068  00800068  00000c06  2**0
                  ALLOC
  3 .debug_aranges 00000080  00000000  00000000  00000c06  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000001ba  00000000  00000000  00000c86  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000170e  00000000  00000000  00000e40  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000003b4  00000000  00000000  0000254e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000d5e  00000000  00000000  00002902  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000120  00000000  00000000  00003660  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000307  00000000  00000000  00003780  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000418  00000000  00000000  00003a87  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001f8  00000000  00000000  00003e9f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	14 c0       	rjmp	.+40     	; 0x2a <__ctors_end>
   2:	2e c0       	rjmp	.+92     	; 0x60 <__bad_interrupt>
   4:	2d c0       	rjmp	.+90     	; 0x60 <__bad_interrupt>
   6:	2c c0       	rjmp	.+88     	; 0x60 <__bad_interrupt>
   8:	2b c0       	rjmp	.+86     	; 0x60 <__bad_interrupt>
   a:	2a c0       	rjmp	.+84     	; 0x60 <__bad_interrupt>
   c:	29 c0       	rjmp	.+82     	; 0x60 <__bad_interrupt>
   e:	28 c0       	rjmp	.+80     	; 0x60 <__bad_interrupt>
  10:	01 c3       	rjmp	.+1538   	; 0x614 <__vector_8>
  12:	17 c3       	rjmp	.+1582   	; 0x642 <__vector_9>
  14:	25 c0       	rjmp	.+74     	; 0x60 <__bad_interrupt>
  16:	24 c0       	rjmp	.+72     	; 0x60 <__bad_interrupt>
  18:	23 c0       	rjmp	.+70     	; 0x60 <__bad_interrupt>
  1a:	22 c0       	rjmp	.+68     	; 0x60 <__bad_interrupt>
  1c:	21 c0       	rjmp	.+66     	; 0x60 <__bad_interrupt>
  1e:	20 c0       	rjmp	.+64     	; 0x60 <__bad_interrupt>
  20:	1f c0       	rjmp	.+62     	; 0x60 <__bad_interrupt>
  22:	1e c0       	rjmp	.+60     	; 0x60 <__bad_interrupt>
  24:	1d c0       	rjmp	.+58     	; 0x60 <__bad_interrupt>
  26:	1c c0       	rjmp	.+56     	; 0x60 <__bad_interrupt>
  28:	1b c0       	rjmp	.+54     	; 0x60 <__bad_interrupt>

0000002a <__ctors_end>:
  2a:	11 24       	eor	r1, r1
  2c:	1f be       	out	0x3f, r1	; 63
  2e:	cf e5       	ldi	r28, 0x5F	; 95
  30:	d2 e0       	ldi	r29, 0x02	; 2
  32:	de bf       	out	0x3e, r29	; 62
  34:	cd bf       	out	0x3d, r28	; 61

00000036 <__do_copy_data>:
  36:	10 e0       	ldi	r17, 0x00	; 0
  38:	a0 e6       	ldi	r26, 0x60	; 96
  3a:	b0 e0       	ldi	r27, 0x00	; 0
  3c:	ea e6       	ldi	r30, 0x6A	; 106
  3e:	fb e0       	ldi	r31, 0x0B	; 11
  40:	02 c0       	rjmp	.+4      	; 0x46 <.do_copy_data_start>

00000042 <.do_copy_data_loop>:
  42:	05 90       	lpm	r0, Z+
  44:	0d 92       	st	X+, r0

00000046 <.do_copy_data_start>:
  46:	a8 36       	cpi	r26, 0x68	; 104
  48:	b1 07       	cpc	r27, r17
  4a:	d9 f7       	brne	.-10     	; 0x42 <.do_copy_data_loop>

0000004c <__do_clear_bss>:
  4c:	10 e0       	ldi	r17, 0x00	; 0
  4e:	a8 e6       	ldi	r26, 0x68	; 104
  50:	b0 e0       	ldi	r27, 0x00	; 0
  52:	01 c0       	rjmp	.+2      	; 0x56 <.do_clear_bss_start>

00000054 <.do_clear_bss_loop>:
  54:	1d 92       	st	X+, r1

00000056 <.do_clear_bss_start>:
  56:	a8 38       	cpi	r26, 0x88	; 136
  58:	b1 07       	cpc	r27, r17
  5a:	e1 f7       	brne	.-8      	; 0x54 <.do_clear_bss_loop>
  5c:	02 d0       	rcall	.+4      	; 0x62 <main>
  5e:	83 c5       	rjmp	.+2822   	; 0xb66 <_exit>

00000060 <__bad_interrupt>:
  60:	cf cf       	rjmp	.-98     	; 0x0 <__vectors>

00000062 <main>:
#include "timer.h"
#include "bits_macros.h"


int main(void)
{
  62:	cf 93       	push	r28
  64:	df 93       	push	r29
  LCD_Init();
  66:	b5 d1       	rcall	.+874    	; 0x3d2 <LCD_Init>
  TIM_Init();
  68:	88 d2       	rcall	.+1296   	; 0x57a <TIM_Init>
  
  LCD_Goto(0,0);
  6a:	80 e8       	ldi	r24, 0x80	; 128
  6c:	13 d1       	rcall	.+550    	; 0x294 <LCD_WriteCom>
  LCD_SendString("Freq: ");
  6e:	80 e6       	ldi	r24, 0x60	; 96
  70:	90 e0       	ldi	r25, 0x00	; 0
  72:	2b d1       	rcall	.+598    	; 0x2ca <LCD_SendString>
  
  sei();
  74:	78 94       	sei
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  76:	c0 e9       	ldi	r28, 0x90	; 144
  78:	d1 e0       	ldi	r29, 0x01	; 1
  while(1){
    //ждем установки флага от схемы захвата
    while(BitIsClear(TIFR, ICF1));
  7a:	08 b6       	in	r0, 0x38	; 56
  7c:	05 fe       	sbrs	r0, 5
  7e:	fd cf       	rjmp	.-6      	; 0x7a <main+0x18>
    //сохраняем значения таймеров
    Capt();
  80:	8b d2       	rcall	.+1302   	; 0x598 <Capt>
  82:	20 e0       	ldi	r18, 0x00	; 0
  84:	30 e0       	ldi	r19, 0x00	; 0
  86:	ce 01       	movw	r24, r28
  88:	01 97       	sbiw	r24, 0x01	; 1
  8a:	f1 f7       	brne	.-4      	; 0x88 <main+0x26>
  8c:	2f 5f       	subi	r18, 0xFF	; 255
  8e:	3f 4f       	sbci	r19, 0xFF	; 255
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  90:	87 e2       	ldi	r24, 0x27	; 39
  92:	20 31       	cpi	r18, 0x10	; 16
  94:	38 07       	cpc	r19, r24
  96:	b9 f7       	brne	.-18     	; 0x86 <main+0x24>
    
    //задержка в 1 секунду
    _delay_ms(1000);    
    
    //ждем установки флага от схемы захвата
    while(BitIsClear(TIFR, ICF1));
  98:	08 b6       	in	r0, 0x38	; 56
  9a:	05 fe       	sbrs	r0, 5
  9c:	fd cf       	rjmp	.-6      	; 0x98 <main+0x36>
    //сохраняем значения таймеров
    Capt();
  9e:	7c d2       	rcall	.+1272   	; 0x598 <Capt>

    //вычисляем значение частоты и выводим на lcd
    TIM_Calculation(); 
  a0:	e7 d2       	rcall	.+1486   	; 0x670 <TIM_Calculation>
  a2:	eb cf       	rjmp	.-42     	; 0x7a <main+0x18>

000000a4 <BCD_LongLcd>:
  a4:	cf 92       	push	r12
  a6:	df 92       	push	r13
  a8:	ef 92       	push	r14
  aa:	ff 92       	push	r15
  ac:	0f 93       	push	r16
  ae:	1f 93       	push	r17
  b0:	cf 93       	push	r28
  b2:	df 93       	push	r29
  b4:	7b 01       	movw	r14, r22
  b6:	8c 01       	movw	r16, r24
  b8:	d4 2e       	mov	r13, r20
  ba:	c2 2e       	mov	r12, r18
  bc:	2a e0       	ldi	r18, 0x0A	; 10
  be:	30 e0       	ldi	r19, 0x00	; 0
  c0:	40 e0       	ldi	r20, 0x00	; 0
  c2:	50 e0       	ldi	r21, 0x00	; 0
  c4:	2e d5       	rcall	.+2652   	; 0xb22 <__udivmodsi4>
  c6:	60 5d       	subi	r22, 0xD0	; 208
  c8:	60 93 7c 00 	sts	0x007C, r22
  cc:	c8 01       	movw	r24, r16
  ce:	b7 01       	movw	r22, r14
  d0:	2a e0       	ldi	r18, 0x0A	; 10
  d2:	30 e0       	ldi	r19, 0x00	; 0
  d4:	40 e0       	ldi	r20, 0x00	; 0
  d6:	50 e0       	ldi	r21, 0x00	; 0
  d8:	24 d5       	rcall	.+2632   	; 0xb22 <__udivmodsi4>
  da:	12 2f       	mov	r17, r18
  dc:	03 2f       	mov	r16, r19
  de:	f4 2e       	mov	r15, r20
  e0:	e5 2e       	mov	r14, r21
  e2:	62 2f       	mov	r22, r18
  e4:	73 2f       	mov	r23, r19
  e6:	84 2f       	mov	r24, r20
  e8:	95 2f       	mov	r25, r21
  ea:	2a e0       	ldi	r18, 0x0A	; 10
  ec:	30 e0       	ldi	r19, 0x00	; 0
  ee:	40 e0       	ldi	r20, 0x00	; 0
  f0:	50 e0       	ldi	r21, 0x00	; 0
  f2:	17 d5       	rcall	.+2606   	; 0xb22 <__udivmodsi4>
  f4:	60 5d       	subi	r22, 0xD0	; 208
  f6:	60 93 7d 00 	sts	0x007D, r22
  fa:	61 2f       	mov	r22, r17
  fc:	70 2f       	mov	r23, r16
  fe:	8f 2d       	mov	r24, r15
 100:	9e 2d       	mov	r25, r14
 102:	2a e0       	ldi	r18, 0x0A	; 10
 104:	30 e0       	ldi	r19, 0x00	; 0
 106:	40 e0       	ldi	r20, 0x00	; 0
 108:	50 e0       	ldi	r21, 0x00	; 0
 10a:	0b d5       	rcall	.+2582   	; 0xb22 <__udivmodsi4>
 10c:	12 2f       	mov	r17, r18
 10e:	03 2f       	mov	r16, r19
 110:	f4 2e       	mov	r15, r20
 112:	e5 2e       	mov	r14, r21
 114:	62 2f       	mov	r22, r18
 116:	73 2f       	mov	r23, r19
 118:	84 2f       	mov	r24, r20
 11a:	95 2f       	mov	r25, r21
 11c:	2a e0       	ldi	r18, 0x0A	; 10
 11e:	30 e0       	ldi	r19, 0x00	; 0
 120:	40 e0       	ldi	r20, 0x00	; 0
 122:	50 e0       	ldi	r21, 0x00	; 0
 124:	fe d4       	rcall	.+2556   	; 0xb22 <__udivmodsi4>
 126:	60 5d       	subi	r22, 0xD0	; 208
 128:	60 93 7e 00 	sts	0x007E, r22
 12c:	61 2f       	mov	r22, r17
 12e:	70 2f       	mov	r23, r16
 130:	8f 2d       	mov	r24, r15
 132:	9e 2d       	mov	r25, r14
 134:	2a e0       	ldi	r18, 0x0A	; 10
 136:	30 e0       	ldi	r19, 0x00	; 0
 138:	40 e0       	ldi	r20, 0x00	; 0
 13a:	50 e0       	ldi	r21, 0x00	; 0
 13c:	f2 d4       	rcall	.+2532   	; 0xb22 <__udivmodsi4>
 13e:	12 2f       	mov	r17, r18
 140:	03 2f       	mov	r16, r19
 142:	f4 2e       	mov	r15, r20
 144:	e5 2e       	mov	r14, r21
 146:	62 2f       	mov	r22, r18
 148:	73 2f       	mov	r23, r19
 14a:	84 2f       	mov	r24, r20
 14c:	95 2f       	mov	r25, r21
 14e:	2a e0       	ldi	r18, 0x0A	; 10
 150:	30 e0       	ldi	r19, 0x00	; 0
 152:	40 e0       	ldi	r20, 0x00	; 0
 154:	50 e0       	ldi	r21, 0x00	; 0
 156:	e5 d4       	rcall	.+2506   	; 0xb22 <__udivmodsi4>
 158:	60 5d       	subi	r22, 0xD0	; 208
 15a:	60 93 7f 00 	sts	0x007F, r22
 15e:	61 2f       	mov	r22, r17
 160:	70 2f       	mov	r23, r16
 162:	8f 2d       	mov	r24, r15
 164:	9e 2d       	mov	r25, r14
 166:	2a e0       	ldi	r18, 0x0A	; 10
 168:	30 e0       	ldi	r19, 0x00	; 0
 16a:	40 e0       	ldi	r20, 0x00	; 0
 16c:	50 e0       	ldi	r21, 0x00	; 0
 16e:	d9 d4       	rcall	.+2482   	; 0xb22 <__udivmodsi4>
 170:	12 2f       	mov	r17, r18
 172:	03 2f       	mov	r16, r19
 174:	f4 2e       	mov	r15, r20
 176:	e5 2e       	mov	r14, r21
 178:	62 2f       	mov	r22, r18
 17a:	73 2f       	mov	r23, r19
 17c:	84 2f       	mov	r24, r20
 17e:	95 2f       	mov	r25, r21
 180:	2a e0       	ldi	r18, 0x0A	; 10
 182:	30 e0       	ldi	r19, 0x00	; 0
 184:	40 e0       	ldi	r20, 0x00	; 0
 186:	50 e0       	ldi	r21, 0x00	; 0
 188:	cc d4       	rcall	.+2456   	; 0xb22 <__udivmodsi4>
 18a:	60 5d       	subi	r22, 0xD0	; 208
 18c:	60 93 80 00 	sts	0x0080, r22
 190:	61 2f       	mov	r22, r17
 192:	70 2f       	mov	r23, r16
 194:	8f 2d       	mov	r24, r15
 196:	9e 2d       	mov	r25, r14
 198:	2a e0       	ldi	r18, 0x0A	; 10
 19a:	30 e0       	ldi	r19, 0x00	; 0
 19c:	40 e0       	ldi	r20, 0x00	; 0
 19e:	50 e0       	ldi	r21, 0x00	; 0
 1a0:	c0 d4       	rcall	.+2432   	; 0xb22 <__udivmodsi4>
 1a2:	12 2f       	mov	r17, r18
 1a4:	03 2f       	mov	r16, r19
 1a6:	f4 2e       	mov	r15, r20
 1a8:	e5 2e       	mov	r14, r21
 1aa:	62 2f       	mov	r22, r18
 1ac:	73 2f       	mov	r23, r19
 1ae:	84 2f       	mov	r24, r20
 1b0:	95 2f       	mov	r25, r21
 1b2:	2a e0       	ldi	r18, 0x0A	; 10
 1b4:	30 e0       	ldi	r19, 0x00	; 0
 1b6:	40 e0       	ldi	r20, 0x00	; 0
 1b8:	50 e0       	ldi	r21, 0x00	; 0
 1ba:	b3 d4       	rcall	.+2406   	; 0xb22 <__udivmodsi4>
 1bc:	60 5d       	subi	r22, 0xD0	; 208
 1be:	60 93 81 00 	sts	0x0081, r22
 1c2:	61 2f       	mov	r22, r17
 1c4:	70 2f       	mov	r23, r16
 1c6:	8f 2d       	mov	r24, r15
 1c8:	9e 2d       	mov	r25, r14
 1ca:	2a e0       	ldi	r18, 0x0A	; 10
 1cc:	30 e0       	ldi	r19, 0x00	; 0
 1ce:	40 e0       	ldi	r20, 0x00	; 0
 1d0:	50 e0       	ldi	r21, 0x00	; 0
 1d2:	a7 d4       	rcall	.+2382   	; 0xb22 <__udivmodsi4>
 1d4:	12 2f       	mov	r17, r18
 1d6:	03 2f       	mov	r16, r19
 1d8:	f4 2e       	mov	r15, r20
 1da:	e5 2e       	mov	r14, r21
 1dc:	62 2f       	mov	r22, r18
 1de:	73 2f       	mov	r23, r19
 1e0:	84 2f       	mov	r24, r20
 1e2:	95 2f       	mov	r25, r21
 1e4:	2a e0       	ldi	r18, 0x0A	; 10
 1e6:	30 e0       	ldi	r19, 0x00	; 0
 1e8:	40 e0       	ldi	r20, 0x00	; 0
 1ea:	50 e0       	ldi	r21, 0x00	; 0
 1ec:	9a d4       	rcall	.+2356   	; 0xb22 <__udivmodsi4>
 1ee:	60 5d       	subi	r22, 0xD0	; 208
 1f0:	60 93 82 00 	sts	0x0082, r22
 1f4:	61 2f       	mov	r22, r17
 1f6:	70 2f       	mov	r23, r16
 1f8:	8f 2d       	mov	r24, r15
 1fa:	9e 2d       	mov	r25, r14
 1fc:	2a e0       	ldi	r18, 0x0A	; 10
 1fe:	30 e0       	ldi	r19, 0x00	; 0
 200:	40 e0       	ldi	r20, 0x00	; 0
 202:	50 e0       	ldi	r21, 0x00	; 0
 204:	8e d4       	rcall	.+2332   	; 0xb22 <__udivmodsi4>
 206:	ca 01       	movw	r24, r20
 208:	b9 01       	movw	r22, r18
 20a:	2a e0       	ldi	r18, 0x0A	; 10
 20c:	30 e0       	ldi	r19, 0x00	; 0
 20e:	40 e0       	ldi	r20, 0x00	; 0
 210:	50 e0       	ldi	r21, 0x00	; 0
 212:	87 d4       	rcall	.+2318   	; 0xb22 <__udivmodsi4>
 214:	60 5d       	subi	r22, 0xD0	; 208
 216:	60 93 83 00 	sts	0x0083, r22
 21a:	dd 20       	and	r13, r13
 21c:	19 f1       	breq	.+70     	; 0x264 <__stack+0x5>
 21e:	cc 20       	and	r12, r12
 220:	c1 f0       	breq	.+48     	; 0x252 <BCD_LongLcd+0x1ae>
 222:	03 e8       	ldi	r16, 0x83	; 131
 224:	10 e0       	ldi	r17, 0x00	; 0
 226:	c0 e0       	ldi	r28, 0x00	; 0
 228:	d0 e0       	ldi	r29, 0x00	; 0
 22a:	88 e0       	ldi	r24, 0x08	; 8
 22c:	e8 2e       	mov	r14, r24
 22e:	f1 2c       	mov	r15, r1
 230:	ec 18       	sub	r14, r12
 232:	f1 08       	sbc	r15, r1
 234:	08 c0       	rjmp	.+16     	; 0x246 <BCD_LongLcd+0x1a2>
 236:	f8 01       	movw	r30, r16
 238:	80 81       	ld	r24, Z
 23a:	93 d0       	rcall	.+294    	; 0x362 <LCD_WriteData>
 23c:	21 96       	adiw	r28, 0x01	; 1
 23e:	01 50       	subi	r16, 0x01	; 1
 240:	10 40       	sbci	r17, 0x00	; 0
 242:	cd 15       	cp	r28, r13
 244:	78 f4       	brcc	.+30     	; 0x264 <__stack+0x5>
 246:	ec 16       	cp	r14, r28
 248:	fd 06       	cpc	r15, r29
 24a:	a9 f7       	brne	.-22     	; 0x236 <BCD_LongLcd+0x192>
 24c:	8c e2       	ldi	r24, 0x2C	; 44
 24e:	89 d0       	rcall	.+274    	; 0x362 <LCD_WriteData>
 250:	f2 cf       	rjmp	.-28     	; 0x236 <BCD_LongLcd+0x192>
 252:	c3 e8       	ldi	r28, 0x83	; 131
 254:	d0 e0       	ldi	r29, 0x00	; 0
 256:	10 e0       	ldi	r17, 0x00	; 0
 258:	88 81       	ld	r24, Y
 25a:	83 d0       	rcall	.+262    	; 0x362 <LCD_WriteData>
 25c:	1f 5f       	subi	r17, 0xFF	; 255
 25e:	21 97       	sbiw	r28, 0x01	; 1
 260:	1d 15       	cp	r17, r13
 262:	d0 f3       	brcs	.-12     	; 0x258 <BCD_LongLcd+0x1b4>
 264:	df 91       	pop	r29
 266:	cf 91       	pop	r28
 268:	1f 91       	pop	r17
 26a:	0f 91       	pop	r16
 26c:	ff 90       	pop	r15
 26e:	ef 90       	pop	r14
 270:	df 90       	pop	r13
 272:	cf 90       	pop	r12
 274:	08 95       	ret

00000276 <LCD_WriteComInit>:
 276:	95 ed       	ldi	r25, 0xD5	; 213
 278:	9a 95       	dec	r25
 27a:	f1 f7       	brne	.-4      	; 0x278 <LCD_WriteComInit+0x2>
 27c:	a8 98       	cbi	0x15, 0	; 21
 27e:	95 b3       	in	r25, 0x15	; 21
 280:	80 7f       	andi	r24, 0xF0	; 240
 282:	9f 70       	andi	r25, 0x0F	; 15
 284:	98 2b       	or	r25, r24
 286:	95 bb       	out	0x15, r25	; 21
 288:	aa 9a       	sbi	0x15, 2	; 21
 28a:	8a e0       	ldi	r24, 0x0A	; 10
 28c:	8a 95       	dec	r24
 28e:	f1 f7       	brne	.-4      	; 0x28c <LCD_WriteComInit+0x16>
 290:	aa 98       	cbi	0x15, 2	; 21
 292:	08 95       	ret

00000294 <LCD_WriteCom>:
 294:	95 ed       	ldi	r25, 0xD5	; 213
 296:	9a 95       	dec	r25
 298:	f1 f7       	brne	.-4      	; 0x296 <LCD_WriteCom+0x2>
 29a:	a8 98       	cbi	0x15, 0	; 21
 29c:	95 b3       	in	r25, 0x15	; 21
 29e:	28 2f       	mov	r18, r24
 2a0:	20 7f       	andi	r18, 0xF0	; 240
 2a2:	9f 70       	andi	r25, 0x0F	; 15
 2a4:	29 2b       	or	r18, r25
 2a6:	25 bb       	out	0x15, r18	; 21
 2a8:	aa 9a       	sbi	0x15, 2	; 21
 2aa:	2a e0       	ldi	r18, 0x0A	; 10
 2ac:	92 2f       	mov	r25, r18
 2ae:	9a 95       	dec	r25
 2b0:	f1 f7       	brne	.-4      	; 0x2ae <LCD_WriteCom+0x1a>
 2b2:	aa 98       	cbi	0x15, 2	; 21
 2b4:	82 95       	swap	r24
 2b6:	95 b3       	in	r25, 0x15	; 21
 2b8:	80 7f       	andi	r24, 0xF0	; 240
 2ba:	9f 70       	andi	r25, 0x0F	; 15
 2bc:	98 2b       	or	r25, r24
 2be:	95 bb       	out	0x15, r25	; 21
 2c0:	aa 9a       	sbi	0x15, 2	; 21
 2c2:	2a 95       	dec	r18
 2c4:	f1 f7       	brne	.-4      	; 0x2c2 <LCD_WriteCom+0x2e>
 2c6:	aa 98       	cbi	0x15, 2	; 21
 2c8:	08 95       	ret

000002ca <LCD_SendString>:
 2ca:	fc 01       	movw	r30, r24
 2cc:	a8 9a       	sbi	0x15, 0	; 21
 2ce:	20 81       	ld	r18, Z
 2d0:	22 23       	and	r18, r18
 2d2:	01 f1       	breq	.+64     	; 0x314 <LCD_SendString+0x4a>
 2d4:	45 ed       	ldi	r20, 0xD5	; 213
 2d6:	3a e0       	ldi	r19, 0x0A	; 10
 2d8:	31 96       	adiw	r30, 0x01	; 1
 2da:	84 2f       	mov	r24, r20
 2dc:	8a 95       	dec	r24
 2de:	f1 f7       	brne	.-4      	; 0x2dc <LCD_SendString+0x12>
 2e0:	a8 9a       	sbi	0x15, 0	; 21
 2e2:	85 b3       	in	r24, 0x15	; 21
 2e4:	92 2f       	mov	r25, r18
 2e6:	90 7f       	andi	r25, 0xF0	; 240
 2e8:	8f 70       	andi	r24, 0x0F	; 15
 2ea:	98 2b       	or	r25, r24
 2ec:	95 bb       	out	0x15, r25	; 21
 2ee:	aa 9a       	sbi	0x15, 2	; 21
 2f0:	83 2f       	mov	r24, r19
 2f2:	8a 95       	dec	r24
 2f4:	f1 f7       	brne	.-4      	; 0x2f2 <LCD_SendString+0x28>
 2f6:	aa 98       	cbi	0x15, 2	; 21
 2f8:	22 95       	swap	r18
 2fa:	85 b3       	in	r24, 0x15	; 21
 2fc:	20 7f       	andi	r18, 0xF0	; 240
 2fe:	8f 70       	andi	r24, 0x0F	; 15
 300:	28 2b       	or	r18, r24
 302:	25 bb       	out	0x15, r18	; 21
 304:	aa 9a       	sbi	0x15, 2	; 21
 306:	83 2f       	mov	r24, r19
 308:	8a 95       	dec	r24
 30a:	f1 f7       	brne	.-4      	; 0x308 <LCD_SendString+0x3e>
 30c:	aa 98       	cbi	0x15, 2	; 21
 30e:	20 81       	ld	r18, Z
 310:	22 23       	and	r18, r18
 312:	11 f7       	brne	.-60     	; 0x2d8 <LCD_SendString+0xe>
 314:	08 95       	ret

00000316 <LCD_SendStringFlash>:
 316:	fc 01       	movw	r30, r24
 318:	84 91       	lpm	r24, Z+
 31a:	88 23       	and	r24, r24
 31c:	09 f1       	breq	.+66     	; 0x360 <LCD_SendStringFlash+0x4a>
 31e:	28 2f       	mov	r18, r24
 320:	45 ed       	ldi	r20, 0xD5	; 213
 322:	3a e0       	ldi	r19, 0x0A	; 10
 324:	84 2f       	mov	r24, r20
 326:	8a 95       	dec	r24
 328:	f1 f7       	brne	.-4      	; 0x326 <LCD_SendStringFlash+0x10>
 32a:	a8 9a       	sbi	0x15, 0	; 21
 32c:	85 b3       	in	r24, 0x15	; 21
 32e:	92 2f       	mov	r25, r18
 330:	90 7f       	andi	r25, 0xF0	; 240
 332:	8f 70       	andi	r24, 0x0F	; 15
 334:	98 2b       	or	r25, r24
 336:	95 bb       	out	0x15, r25	; 21
 338:	aa 9a       	sbi	0x15, 2	; 21
 33a:	83 2f       	mov	r24, r19
 33c:	8a 95       	dec	r24
 33e:	f1 f7       	brne	.-4      	; 0x33c <LCD_SendStringFlash+0x26>
 340:	aa 98       	cbi	0x15, 2	; 21
 342:	22 95       	swap	r18
 344:	85 b3       	in	r24, 0x15	; 21
 346:	20 7f       	andi	r18, 0xF0	; 240
 348:	8f 70       	andi	r24, 0x0F	; 15
 34a:	82 2b       	or	r24, r18
 34c:	85 bb       	out	0x15, r24	; 21
 34e:	aa 9a       	sbi	0x15, 2	; 21
 350:	83 2f       	mov	r24, r19
 352:	8a 95       	dec	r24
 354:	f1 f7       	brne	.-4      	; 0x352 <LCD_SendStringFlash+0x3c>
 356:	aa 98       	cbi	0x15, 2	; 21
 358:	31 96       	adiw	r30, 0x01	; 1
 35a:	24 91       	lpm	r18, Z+
 35c:	22 23       	and	r18, r18
 35e:	11 f7       	brne	.-60     	; 0x324 <LCD_SendStringFlash+0xe>
 360:	08 95       	ret

00000362 <LCD_WriteData>:
 362:	95 ed       	ldi	r25, 0xD5	; 213
 364:	9a 95       	dec	r25
 366:	f1 f7       	brne	.-4      	; 0x364 <LCD_WriteData+0x2>
 368:	a8 9a       	sbi	0x15, 0	; 21
 36a:	95 b3       	in	r25, 0x15	; 21
 36c:	28 2f       	mov	r18, r24
 36e:	20 7f       	andi	r18, 0xF0	; 240
 370:	9f 70       	andi	r25, 0x0F	; 15
 372:	29 2b       	or	r18, r25
 374:	25 bb       	out	0x15, r18	; 21
 376:	aa 9a       	sbi	0x15, 2	; 21
 378:	2a e0       	ldi	r18, 0x0A	; 10
 37a:	92 2f       	mov	r25, r18
 37c:	9a 95       	dec	r25
 37e:	f1 f7       	brne	.-4      	; 0x37c <LCD_WriteData+0x1a>
 380:	aa 98       	cbi	0x15, 2	; 21
 382:	82 95       	swap	r24
 384:	95 b3       	in	r25, 0x15	; 21
 386:	80 7f       	andi	r24, 0xF0	; 240
 388:	9f 70       	andi	r25, 0x0F	; 15
 38a:	98 2b       	or	r25, r24
 38c:	95 bb       	out	0x15, r25	; 21
 38e:	aa 9a       	sbi	0x15, 2	; 21
 390:	2a 95       	dec	r18
 392:	f1 f7       	brne	.-4      	; 0x390 <LCD_WriteData+0x2e>
 394:	aa 98       	cbi	0x15, 2	; 21
 396:	08 95       	ret

00000398 <LCD_Clear>:
 398:	85 ed       	ldi	r24, 0xD5	; 213
 39a:	8a 95       	dec	r24
 39c:	f1 f7       	brne	.-4      	; 0x39a <LCD_Clear+0x2>
 39e:	a8 98       	cbi	0x15, 0	; 21
 3a0:	85 b3       	in	r24, 0x15	; 21
 3a2:	8f 70       	andi	r24, 0x0F	; 15
 3a4:	85 bb       	out	0x15, r24	; 21
 3a6:	aa 9a       	sbi	0x15, 2	; 21
 3a8:	2a e0       	ldi	r18, 0x0A	; 10
 3aa:	82 2f       	mov	r24, r18
 3ac:	8a 95       	dec	r24
 3ae:	f1 f7       	brne	.-4      	; 0x3ac <LCD_Clear+0x14>
 3b0:	aa 98       	cbi	0x15, 2	; 21
 3b2:	81 e0       	ldi	r24, 0x01	; 1
 3b4:	82 95       	swap	r24
 3b6:	95 b3       	in	r25, 0x15	; 21
 3b8:	80 7f       	andi	r24, 0xF0	; 240
 3ba:	9f 70       	andi	r25, 0x0F	; 15
 3bc:	89 2b       	or	r24, r25
 3be:	85 bb       	out	0x15, r24	; 21
 3c0:	aa 9a       	sbi	0x15, 2	; 21
 3c2:	2a 95       	dec	r18
 3c4:	f1 f7       	brne	.-4      	; 0x3c2 <LCD_Clear+0x2a>
 3c6:	aa 98       	cbi	0x15, 2	; 21
 3c8:	80 e4       	ldi	r24, 0x40	; 64
 3ca:	9f e1       	ldi	r25, 0x1F	; 31
 3cc:	01 97       	sbiw	r24, 0x01	; 1
 3ce:	f1 f7       	brne	.-4      	; 0x3cc <LCD_Clear+0x34>
 3d0:	08 95       	ret

000003d2 <LCD_Init>:
 3d2:	84 b3       	in	r24, 0x14	; 20
 3d4:	80 6f       	ori	r24, 0xF0	; 240
 3d6:	84 bb       	out	0x14, r24	; 20
 3d8:	85 b3       	in	r24, 0x15	; 21
 3da:	80 6f       	ori	r24, 0xF0	; 240
 3dc:	85 bb       	out	0x15, r24	; 21
 3de:	84 b3       	in	r24, 0x14	; 20
 3e0:	87 60       	ori	r24, 0x07	; 7
 3e2:	84 bb       	out	0x14, r24	; 20
 3e4:	85 b3       	in	r24, 0x15	; 21
 3e6:	87 60       	ori	r24, 0x07	; 7
 3e8:	85 bb       	out	0x15, r24	; 21
 3ea:	a9 98       	cbi	0x15, 1	; 21
 3ec:	20 e0       	ldi	r18, 0x00	; 0
 3ee:	30 e0       	ldi	r19, 0x00	; 0
 3f0:	40 e9       	ldi	r20, 0x90	; 144
 3f2:	51 e0       	ldi	r21, 0x01	; 1
 3f4:	ca 01       	movw	r24, r20
 3f6:	01 97       	sbiw	r24, 0x01	; 1
 3f8:	f1 f7       	brne	.-4      	; 0x3f6 <LCD_Init+0x24>
 3fa:	2f 5f       	subi	r18, 0xFF	; 255
 3fc:	3f 4f       	sbci	r19, 0xFF	; 255
 3fe:	81 e0       	ldi	r24, 0x01	; 1
 400:	20 39       	cpi	r18, 0x90	; 144
 402:	38 07       	cpc	r19, r24
 404:	b9 f7       	brne	.-18     	; 0x3f4 <LCD_Init+0x22>
 406:	35 ed       	ldi	r19, 0xD5	; 213
 408:	83 2f       	mov	r24, r19
 40a:	8a 95       	dec	r24
 40c:	f1 f7       	brne	.-4      	; 0x40a <LCD_Init+0x38>
 40e:	a8 98       	cbi	0x15, 0	; 21
 410:	85 b3       	in	r24, 0x15	; 21
 412:	8f 70       	andi	r24, 0x0F	; 15
 414:	80 63       	ori	r24, 0x30	; 48
 416:	85 bb       	out	0x15, r24	; 21
 418:	aa 9a       	sbi	0x15, 2	; 21
 41a:	2a e0       	ldi	r18, 0x0A	; 10
 41c:	82 2f       	mov	r24, r18
 41e:	8a 95       	dec	r24
 420:	f1 f7       	brne	.-4      	; 0x41e <LCD_Init+0x4c>
 422:	aa 98       	cbi	0x15, 2	; 21
 424:	80 e4       	ldi	r24, 0x40	; 64
 426:	9c e9       	ldi	r25, 0x9C	; 156
 428:	01 97       	sbiw	r24, 0x01	; 1
 42a:	f1 f7       	brne	.-4      	; 0x428 <LCD_Init+0x56>
 42c:	83 2f       	mov	r24, r19
 42e:	8a 95       	dec	r24
 430:	f1 f7       	brne	.-4      	; 0x42e <LCD_Init+0x5c>
 432:	a8 98       	cbi	0x15, 0	; 21
 434:	85 b3       	in	r24, 0x15	; 21
 436:	8f 70       	andi	r24, 0x0F	; 15
 438:	80 63       	ori	r24, 0x30	; 48
 43a:	85 bb       	out	0x15, r24	; 21
 43c:	aa 9a       	sbi	0x15, 2	; 21
 43e:	82 2f       	mov	r24, r18
 440:	8a 95       	dec	r24
 442:	f1 f7       	brne	.-4      	; 0x440 <LCD_Init+0x6e>
 444:	aa 98       	cbi	0x15, 2	; 21
 446:	80 ea       	ldi	r24, 0xA0	; 160
 448:	9f e0       	ldi	r25, 0x0F	; 15
 44a:	01 97       	sbiw	r24, 0x01	; 1
 44c:	f1 f7       	brne	.-4      	; 0x44a <LCD_Init+0x78>
 44e:	83 2f       	mov	r24, r19
 450:	8a 95       	dec	r24
 452:	f1 f7       	brne	.-4      	; 0x450 <LCD_Init+0x7e>
 454:	a8 98       	cbi	0x15, 0	; 21
 456:	85 b3       	in	r24, 0x15	; 21
 458:	8f 70       	andi	r24, 0x0F	; 15
 45a:	80 63       	ori	r24, 0x30	; 48
 45c:	85 bb       	out	0x15, r24	; 21
 45e:	aa 9a       	sbi	0x15, 2	; 21
 460:	82 2f       	mov	r24, r18
 462:	8a 95       	dec	r24
 464:	f1 f7       	brne	.-4      	; 0x462 <LCD_Init+0x90>
 466:	aa 98       	cbi	0x15, 2	; 21
 468:	83 2f       	mov	r24, r19
 46a:	8a 95       	dec	r24
 46c:	f1 f7       	brne	.-4      	; 0x46a <LCD_Init+0x98>
 46e:	a8 98       	cbi	0x15, 0	; 21
 470:	85 b3       	in	r24, 0x15	; 21
 472:	8f 70       	andi	r24, 0x0F	; 15
 474:	80 62       	ori	r24, 0x20	; 32
 476:	85 bb       	out	0x15, r24	; 21
 478:	aa 9a       	sbi	0x15, 2	; 21
 47a:	82 2f       	mov	r24, r18
 47c:	8a 95       	dec	r24
 47e:	f1 f7       	brne	.-4      	; 0x47c <LCD_Init+0xaa>
 480:	aa 98       	cbi	0x15, 2	; 21
 482:	83 2f       	mov	r24, r19
 484:	8a 95       	dec	r24
 486:	f1 f7       	brne	.-4      	; 0x484 <LCD_Init+0xb2>
 488:	a8 98       	cbi	0x15, 0	; 21
 48a:	85 b3       	in	r24, 0x15	; 21
 48c:	8f 70       	andi	r24, 0x0F	; 15
 48e:	80 62       	ori	r24, 0x20	; 32
 490:	85 bb       	out	0x15, r24	; 21
 492:	aa 9a       	sbi	0x15, 2	; 21
 494:	82 2f       	mov	r24, r18
 496:	8a 95       	dec	r24
 498:	f1 f7       	brne	.-4      	; 0x496 <LCD_Init+0xc4>
 49a:	aa 98       	cbi	0x15, 2	; 21
 49c:	88 e2       	ldi	r24, 0x28	; 40
 49e:	82 95       	swap	r24
 4a0:	95 b3       	in	r25, 0x15	; 21
 4a2:	80 7f       	andi	r24, 0xF0	; 240
 4a4:	9f 70       	andi	r25, 0x0F	; 15
 4a6:	89 2b       	or	r24, r25
 4a8:	85 bb       	out	0x15, r24	; 21
 4aa:	aa 9a       	sbi	0x15, 2	; 21
 4ac:	82 2f       	mov	r24, r18
 4ae:	8a 95       	dec	r24
 4b0:	f1 f7       	brne	.-4      	; 0x4ae <LCD_Init+0xdc>
 4b2:	aa 98       	cbi	0x15, 2	; 21
 4b4:	83 2f       	mov	r24, r19
 4b6:	8a 95       	dec	r24
 4b8:	f1 f7       	brne	.-4      	; 0x4b6 <LCD_Init+0xe4>
 4ba:	a8 98       	cbi	0x15, 0	; 21
 4bc:	85 b3       	in	r24, 0x15	; 21
 4be:	8f 70       	andi	r24, 0x0F	; 15
 4c0:	85 bb       	out	0x15, r24	; 21
 4c2:	aa 9a       	sbi	0x15, 2	; 21
 4c4:	82 2f       	mov	r24, r18
 4c6:	8a 95       	dec	r24
 4c8:	f1 f7       	brne	.-4      	; 0x4c6 <LCD_Init+0xf4>
 4ca:	aa 98       	cbi	0x15, 2	; 21
 4cc:	88 e0       	ldi	r24, 0x08	; 8
 4ce:	82 95       	swap	r24
 4d0:	95 b3       	in	r25, 0x15	; 21
 4d2:	80 7f       	andi	r24, 0xF0	; 240
 4d4:	9f 70       	andi	r25, 0x0F	; 15
 4d6:	89 2b       	or	r24, r25
 4d8:	85 bb       	out	0x15, r24	; 21
 4da:	aa 9a       	sbi	0x15, 2	; 21
 4dc:	82 2f       	mov	r24, r18
 4de:	8a 95       	dec	r24
 4e0:	f1 f7       	brne	.-4      	; 0x4de <LCD_Init+0x10c>
 4e2:	aa 98       	cbi	0x15, 2	; 21
 4e4:	83 2f       	mov	r24, r19
 4e6:	8a 95       	dec	r24
 4e8:	f1 f7       	brne	.-4      	; 0x4e6 <LCD_Init+0x114>
 4ea:	a8 98       	cbi	0x15, 0	; 21
 4ec:	85 b3       	in	r24, 0x15	; 21
 4ee:	8f 70       	andi	r24, 0x0F	; 15
 4f0:	85 bb       	out	0x15, r24	; 21
 4f2:	aa 9a       	sbi	0x15, 2	; 21
 4f4:	82 2f       	mov	r24, r18
 4f6:	8a 95       	dec	r24
 4f8:	f1 f7       	brne	.-4      	; 0x4f6 <LCD_Init+0x124>
 4fa:	aa 98       	cbi	0x15, 2	; 21
 4fc:	8c e0       	ldi	r24, 0x0C	; 12
 4fe:	82 95       	swap	r24
 500:	95 b3       	in	r25, 0x15	; 21
 502:	80 7f       	andi	r24, 0xF0	; 240
 504:	9f 70       	andi	r25, 0x0F	; 15
 506:	89 2b       	or	r24, r25
 508:	85 bb       	out	0x15, r24	; 21
 50a:	aa 9a       	sbi	0x15, 2	; 21
 50c:	82 2f       	mov	r24, r18
 50e:	8a 95       	dec	r24
 510:	f1 f7       	brne	.-4      	; 0x50e <LCD_Init+0x13c>
 512:	aa 98       	cbi	0x15, 2	; 21
 514:	83 2f       	mov	r24, r19
 516:	8a 95       	dec	r24
 518:	f1 f7       	brne	.-4      	; 0x516 <LCD_Init+0x144>
 51a:	a8 98       	cbi	0x15, 0	; 21
 51c:	85 b3       	in	r24, 0x15	; 21
 51e:	8f 70       	andi	r24, 0x0F	; 15
 520:	85 bb       	out	0x15, r24	; 21
 522:	aa 9a       	sbi	0x15, 2	; 21
 524:	82 2f       	mov	r24, r18
 526:	8a 95       	dec	r24
 528:	f1 f7       	brne	.-4      	; 0x526 <LCD_Init+0x154>
 52a:	aa 98       	cbi	0x15, 2	; 21
 52c:	81 e0       	ldi	r24, 0x01	; 1
 52e:	82 95       	swap	r24
 530:	95 b3       	in	r25, 0x15	; 21
 532:	80 7f       	andi	r24, 0xF0	; 240
 534:	9f 70       	andi	r25, 0x0F	; 15
 536:	89 2b       	or	r24, r25
 538:	85 bb       	out	0x15, r24	; 21
 53a:	aa 9a       	sbi	0x15, 2	; 21
 53c:	82 2f       	mov	r24, r18
 53e:	8a 95       	dec	r24
 540:	f1 f7       	brne	.-4      	; 0x53e <LCD_Init+0x16c>
 542:	aa 98       	cbi	0x15, 2	; 21
 544:	80 e4       	ldi	r24, 0x40	; 64
 546:	9f e1       	ldi	r25, 0x1F	; 31
 548:	01 97       	sbiw	r24, 0x01	; 1
 54a:	f1 f7       	brne	.-4      	; 0x548 <LCD_Init+0x176>
 54c:	3a 95       	dec	r19
 54e:	f1 f7       	brne	.-4      	; 0x54c <LCD_Init+0x17a>
 550:	a8 98       	cbi	0x15, 0	; 21
 552:	85 b3       	in	r24, 0x15	; 21
 554:	8f 70       	andi	r24, 0x0F	; 15
 556:	85 bb       	out	0x15, r24	; 21
 558:	aa 9a       	sbi	0x15, 2	; 21
 55a:	82 2f       	mov	r24, r18
 55c:	8a 95       	dec	r24
 55e:	f1 f7       	brne	.-4      	; 0x55c <LCD_Init+0x18a>
 560:	aa 98       	cbi	0x15, 2	; 21
 562:	86 e0       	ldi	r24, 0x06	; 6
 564:	82 95       	swap	r24
 566:	95 b3       	in	r25, 0x15	; 21
 568:	80 7f       	andi	r24, 0xF0	; 240
 56a:	9f 70       	andi	r25, 0x0F	; 15
 56c:	89 2b       	or	r24, r25
 56e:	85 bb       	out	0x15, r24	; 21
 570:	aa 9a       	sbi	0x15, 2	; 21
 572:	2a 95       	dec	r18
 574:	f1 f7       	brne	.-4      	; 0x572 <LCD_Init+0x1a0>
 576:	aa 98       	cbi	0x15, 2	; 21
 578:	08 95       	ret

0000057a <TIM_Init>:
   /*инициализация таймера Т1
     -разрешение прерывания по переполнению
     -режим normal
     -захват по переднему фронту
     -предделитьель 1*/
   TIMSK |= (1<<TOIE1);
 57a:	89 b7       	in	r24, 0x39	; 57
 57c:	84 60       	ori	r24, 0x04	; 4
 57e:	89 bf       	out	0x39, r24	; 57
   TCCR1A=(0<<COM1A1)|(0<<COM1A0)|(0<<WGM11)|(0<<WGM10); 
 580:	1f bc       	out	0x2f, r1	; 47
   TCCR1B=(0<ICNC1)|(1<<ICES1)|(0<<WGM13)|(0<<WGM12)|(0<<CS12)|(0<<CS11)|(1<<CS10); 
 582:	81 e4       	ldi	r24, 0x41	; 65
 584:	8e bd       	out	0x2e, r24	; 46
   TCNT1 = 0;
 586:	1d bc       	out	0x2d, r1	; 45
 588:	1c bc       	out	0x2c, r1	; 44
   
   /*инициализация таймера Т0
      -разрешение прерывания по переполнению
      -тактовый сигнал - внешний с вывода Т0*/
   TIMSK |= (1<<TOIE0);
 58a:	89 b7       	in	r24, 0x39	; 57
 58c:	81 60       	ori	r24, 0x01	; 1
 58e:	89 bf       	out	0x39, r24	; 57
   TCCR0 = (1<<CS02)|(1<<CS01)|(1<<CS00);
 590:	87 e0       	ldi	r24, 0x07	; 7
 592:	83 bf       	out	0x33, r24	; 51
   TCNT0 = 0;
 594:	12 be       	out	0x32, r1	; 50
}
 596:	08 95       	ret

00000598 <Capt>:
unsigned char bufTCNT0;
unsigned int bufICR1;
unsigned int bufTimer0;
unsigned int bufTimer1;

   cli();
 598:	f8 94       	cli
   bufTCNT0 = TCNT0;   
 59a:	62 b7       	in	r22, 0x32	; 50
   bufTimer0 = timer0;
 59c:	20 91 68 00 	lds	r18, 0x0068
 5a0:	30 91 69 00 	lds	r19, 0x0069
   bufICR1 =  TCNT1;
 5a4:	ec b5       	in	r30, 0x2c	; 44
 5a6:	fd b5       	in	r31, 0x2d	; 45
   bufTimer1 = timer1;
 5a8:	40 91 6a 00 	lds	r20, 0x006A
 5ac:	50 91 6b 00 	lds	r21, 0x006B
   sei();
 5b0:	78 94       	sei
  
  tcnt01 = tcnt02;
 5b2:	80 91 72 00 	lds	r24, 0x0072
 5b6:	90 91 73 00 	lds	r25, 0x0073
 5ba:	90 93 71 00 	sts	0x0071, r25
 5be:	80 93 70 00 	sts	0x0070, r24
  tcnt02 = bufTCNT0;
 5c2:	60 93 72 00 	sts	0x0072, r22
 5c6:	10 92 73 00 	sts	0x0073, r1
  
  saveTimer01 = saveTimer02;
 5ca:	80 91 76 00 	lds	r24, 0x0076
 5ce:	90 91 77 00 	lds	r25, 0x0077
 5d2:	90 93 75 00 	sts	0x0075, r25
 5d6:	80 93 74 00 	sts	0x0074, r24
  saveTimer02 = bufTimer0;
 5da:	30 93 77 00 	sts	0x0077, r19
 5de:	20 93 76 00 	sts	0x0076, r18
  
  saveTimer11 = saveTimer12;
 5e2:	80 91 7a 00 	lds	r24, 0x007A
 5e6:	90 91 7b 00 	lds	r25, 0x007B
 5ea:	90 93 79 00 	sts	0x0079, r25
 5ee:	80 93 78 00 	sts	0x0078, r24
  saveTimer12 = bufTimer1;
 5f2:	50 93 7b 00 	sts	0x007B, r21
 5f6:	40 93 7a 00 	sts	0x007A, r20
  
  icr11 = icr12;
 5fa:	80 91 6e 00 	lds	r24, 0x006E
 5fe:	90 91 6f 00 	lds	r25, 0x006F
 602:	90 93 6d 00 	sts	0x006D, r25
 606:	80 93 6c 00 	sts	0x006C, r24
  icr12 = bufICR1;   
 60a:	f0 93 6f 00 	sts	0x006F, r31
 60e:	e0 93 6e 00 	sts	0x006E, r30
}
 612:	08 95       	ret

00000614 <__vector_8>:


ISR(TIMER1_OVF_vect)
{
 614:	1f 92       	push	r1
 616:	0f 92       	push	r0
 618:	0f b6       	in	r0, 0x3f	; 63
 61a:	0f 92       	push	r0
 61c:	11 24       	eor	r1, r1
 61e:	8f 93       	push	r24
 620:	9f 93       	push	r25
   timer1++;  
 622:	80 91 6a 00 	lds	r24, 0x006A
 626:	90 91 6b 00 	lds	r25, 0x006B
 62a:	01 96       	adiw	r24, 0x01	; 1
 62c:	90 93 6b 00 	sts	0x006B, r25
 630:	80 93 6a 00 	sts	0x006A, r24
}
 634:	9f 91       	pop	r25
 636:	8f 91       	pop	r24
 638:	0f 90       	pop	r0
 63a:	0f be       	out	0x3f, r0	; 63
 63c:	0f 90       	pop	r0
 63e:	1f 90       	pop	r1
 640:	18 95       	reti

00000642 <__vector_9>:

ISR(TIMER0_OVF_vect)
{  
 642:	1f 92       	push	r1
 644:	0f 92       	push	r0
 646:	0f b6       	in	r0, 0x3f	; 63
 648:	0f 92       	push	r0
 64a:	11 24       	eor	r1, r1
 64c:	8f 93       	push	r24
 64e:	9f 93       	push	r25
   timer0++;   
 650:	80 91 68 00 	lds	r24, 0x0068
 654:	90 91 69 00 	lds	r25, 0x0069
 658:	01 96       	adiw	r24, 0x01	; 1
 65a:	90 93 69 00 	sts	0x0069, r25
 65e:	80 93 68 00 	sts	0x0068, r24
}
 662:	9f 91       	pop	r25
 664:	8f 91       	pop	r24
 666:	0f 90       	pop	r0
 668:	0f be       	out	0x3f, r0	; 63
 66a:	0f 90       	pop	r0
 66c:	1f 90       	pop	r1
 66e:	18 95       	reti

00000670 <TIM_Calculation>:


void TIM_Calculation(void)
{
 670:	6f 92       	push	r6
 672:	7f 92       	push	r7
 674:	8f 92       	push	r8
 676:	9f 92       	push	r9
 678:	af 92       	push	r10
 67a:	bf 92       	push	r11
 67c:	cf 92       	push	r12
 67e:	df 92       	push	r13
 680:	ef 92       	push	r14
 682:	ff 92       	push	r15
 684:	0f 93       	push	r16
 686:	1f 93       	push	r17
  unsigned long baseImp;
  unsigned long mesurImp;
  //unsigned long result;
 
  cli(); 
 688:	f8 94       	cli
  //вычисляем количество импульсов тактового сигнала
  saveTimer12 = saveTimer12 - saveTimer11;
 68a:	20 91 7a 00 	lds	r18, 0x007A
 68e:	30 91 7b 00 	lds	r19, 0x007B
 692:	80 91 78 00 	lds	r24, 0x0078
 696:	90 91 79 00 	lds	r25, 0x0079
 69a:	28 1b       	sub	r18, r24
 69c:	39 0b       	sbc	r19, r25
 69e:	30 93 7b 00 	sts	0x007B, r19
 6a2:	20 93 7a 00 	sts	0x007A, r18
  baseImp = (icr12 + (unsigned long)saveTimer12*65536) - icr11;
 6a6:	a0 90 6e 00 	lds	r10, 0x006E
 6aa:	b0 90 6f 00 	lds	r11, 0x006F
 6ae:	cc 24       	eor	r12, r12
 6b0:	dd 24       	eor	r13, r13
 6b2:	80 91 6c 00 	lds	r24, 0x006C
 6b6:	90 91 6d 00 	lds	r25, 0x006D
 6ba:	a0 e0       	ldi	r26, 0x00	; 0
 6bc:	b0 e0       	ldi	r27, 0x00	; 0
 6be:	a8 1a       	sub	r10, r24
 6c0:	b9 0a       	sbc	r11, r25
 6c2:	ca 0a       	sbc	r12, r26
 6c4:	db 0a       	sbc	r13, r27
 6c6:	40 e0       	ldi	r20, 0x00	; 0
 6c8:	50 e0       	ldi	r21, 0x00	; 0
 6ca:	a9 01       	movw	r20, r18
 6cc:	33 27       	eor	r19, r19
 6ce:	22 27       	eor	r18, r18
 6d0:	a2 0e       	add	r10, r18
 6d2:	b3 1e       	adc	r11, r19
 6d4:	c4 1e       	adc	r12, r20
 6d6:	d5 1e       	adc	r13, r21
  
  //вычисляем количество импульсов измеряемого сигнала
  saveTimer02 = saveTimer02 - saveTimer01;
 6d8:	e0 90 76 00 	lds	r14, 0x0076
 6dc:	f0 90 77 00 	lds	r15, 0x0077
 6e0:	80 91 74 00 	lds	r24, 0x0074
 6e4:	90 91 75 00 	lds	r25, 0x0075
 6e8:	e8 1a       	sub	r14, r24
 6ea:	f9 0a       	sbc	r15, r25
 6ec:	f0 92 77 00 	sts	0x0077, r15
 6f0:	e0 92 76 00 	sts	0x0076, r14
  mesurImp = ((tcnt02 + (unsigned  long)saveTimer02*256) - tcnt01)*10;
 6f4:	60 91 72 00 	lds	r22, 0x0072
 6f8:	70 91 73 00 	lds	r23, 0x0073
 6fc:	80 e0       	ldi	r24, 0x00	; 0
 6fe:	90 e0       	ldi	r25, 0x00	; 0
 700:	20 91 70 00 	lds	r18, 0x0070
 704:	30 91 71 00 	lds	r19, 0x0071
 708:	40 e0       	ldi	r20, 0x00	; 0
 70a:	50 e0       	ldi	r21, 0x00	; 0
 70c:	62 1b       	sub	r22, r18
 70e:	73 0b       	sbc	r23, r19
 710:	84 0b       	sbc	r24, r20
 712:	95 0b       	sbc	r25, r21
 714:	00 e0       	ldi	r16, 0x00	; 0
 716:	10 e0       	ldi	r17, 0x00	; 0
 718:	10 2f       	mov	r17, r16
 71a:	0f 2d       	mov	r16, r15
 71c:	fe 2c       	mov	r15, r14
 71e:	ee 24       	eor	r14, r14
 720:	6e 0d       	add	r22, r14
 722:	7f 1d       	adc	r23, r15
 724:	80 1f       	adc	r24, r16
 726:	91 1f       	adc	r25, r17
 728:	2a e0       	ldi	r18, 0x0A	; 10
 72a:	30 e0       	ldi	r19, 0x00	; 0
 72c:	40 e0       	ldi	r20, 0x00	; 0
 72e:	50 e0       	ldi	r21, 0x00	; 0
 730:	d9 d1       	rcall	.+946    	; 0xae4 <__mulsi3>
 732:	3b 01       	movw	r6, r22
 734:	4c 01       	movw	r8, r24
  
  //вычисляем значение частоты
  //из за проблем с типом long long пришлось пожертвовать точностью
  //и вычислять частоту по формуле:
  //result = (((16000000UL*200)/baseImp)*mesurImp)/20;
  result = 16000000.0*(float)mesurImp/(float)baseImp;
 736:	e5 d0       	rcall	.+458    	; 0x902 <__floatunsisf>
 738:	20 e0       	ldi	r18, 0x00	; 0
 73a:	34 e2       	ldi	r19, 0x24	; 36
 73c:	44 e7       	ldi	r20, 0x74	; 116
 73e:	5b e4       	ldi	r21, 0x4B	; 75
 740:	6e d1       	rcall	.+732    	; 0xa1e <__mulsf3>
 742:	7b 01       	movw	r14, r22
 744:	8c 01       	movw	r16, r24
 746:	c6 01       	movw	r24, r12
 748:	b5 01       	movw	r22, r10
 74a:	db d0       	rcall	.+438    	; 0x902 <__floatunsisf>
 74c:	9b 01       	movw	r18, r22
 74e:	ac 01       	movw	r20, r24
 750:	c8 01       	movw	r24, r16
 752:	b7 01       	movw	r22, r14
 754:	42 d0       	rcall	.+132    	; 0x7da <__divsf3>
 756:	a9 d0       	rcall	.+338    	; 0x8aa <__fixunssfsi>
 758:	60 93 84 00 	sts	0x0084, r22
 75c:	70 93 85 00 	sts	0x0085, r23
 760:	80 93 86 00 	sts	0x0086, r24
 764:	90 93 87 00 	sts	0x0087, r25
  
   //выводим на дисплей частоту
  LCD_Goto(7,0);
 768:	87 e8       	ldi	r24, 0x87	; 135
 76a:	94 dd       	rcall	.-1240   	; 0x294 <LCD_WriteCom>
  BCD_LongLcd(result, 8, 1); 
 76c:	60 91 84 00 	lds	r22, 0x0084
 770:	70 91 85 00 	lds	r23, 0x0085
 774:	80 91 86 00 	lds	r24, 0x0086
 778:	90 91 87 00 	lds	r25, 0x0087
 77c:	48 e0       	ldi	r20, 0x08	; 8
 77e:	21 e0       	ldi	r18, 0x01	; 1
 780:	91 dc       	rcall	.-1758   	; 0xa4 <BCD_LongLcd>
  //и для отладки количество опорных и входных импульсов
  LCD_Goto(8,1);
 782:	88 ec       	ldi	r24, 0xC8	; 200
 784:	87 dd       	rcall	.-1266   	; 0x294 <LCD_WriteCom>
  BCD_LongLcd(baseImp, 8,0); 
 786:	c6 01       	movw	r24, r12
 788:	b5 01       	movw	r22, r10
 78a:	48 e0       	ldi	r20, 0x08	; 8
 78c:	20 e0       	ldi	r18, 0x00	; 0
 78e:	8a dc       	rcall	.-1772   	; 0xa4 <BCD_LongLcd>
  LCD_Goto(0,1);
 790:	80 ec       	ldi	r24, 0xC0	; 192
 792:	80 dd       	rcall	.-1280   	; 0x294 <LCD_WriteCom>
  BCD_LongLcd(mesurImp, 7, 0);  
 794:	c4 01       	movw	r24, r8
 796:	b3 01       	movw	r22, r6
 798:	47 e0       	ldi	r20, 0x07	; 7
 79a:	20 e0       	ldi	r18, 0x00	; 0
 79c:	83 dc       	rcall	.-1786   	; 0xa4 <BCD_LongLcd>
  
  saveTimer01 = 0;
 79e:	10 92 75 00 	sts	0x0075, r1
 7a2:	10 92 74 00 	sts	0x0074, r1
  saveTimer02 = 0;  
 7a6:	10 92 77 00 	sts	0x0077, r1
 7aa:	10 92 76 00 	sts	0x0076, r1
  saveTimer11 = 0;
 7ae:	10 92 79 00 	sts	0x0079, r1
 7b2:	10 92 78 00 	sts	0x0078, r1
  saveTimer12 = 0;
 7b6:	10 92 7b 00 	sts	0x007B, r1
 7ba:	10 92 7a 00 	sts	0x007A, r1
  sei();
 7be:	78 94       	sei
}
 7c0:	1f 91       	pop	r17
 7c2:	0f 91       	pop	r16
 7c4:	ff 90       	pop	r15
 7c6:	ef 90       	pop	r14
 7c8:	df 90       	pop	r13
 7ca:	cf 90       	pop	r12
 7cc:	bf 90       	pop	r11
 7ce:	af 90       	pop	r10
 7d0:	9f 90       	pop	r9
 7d2:	8f 90       	pop	r8
 7d4:	7f 90       	pop	r7
 7d6:	6f 90       	pop	r6
 7d8:	08 95       	ret

000007da <__divsf3>:
 7da:	0c d0       	rcall	.+24     	; 0x7f4 <__divsf3x>
 7dc:	e6 c0       	rjmp	.+460    	; 0x9aa <__fp_round>
 7de:	de d0       	rcall	.+444    	; 0x99c <__fp_pscB>
 7e0:	40 f0       	brcs	.+16     	; 0x7f2 <__divsf3+0x18>
 7e2:	d5 d0       	rcall	.+426    	; 0x98e <__fp_pscA>
 7e4:	30 f0       	brcs	.+12     	; 0x7f2 <__divsf3+0x18>
 7e6:	21 f4       	brne	.+8      	; 0x7f0 <__divsf3+0x16>
 7e8:	5f 3f       	cpi	r21, 0xFF	; 255
 7ea:	19 f0       	breq	.+6      	; 0x7f2 <__divsf3+0x18>
 7ec:	c7 c0       	rjmp	.+398    	; 0x97c <__fp_inf>
 7ee:	51 11       	cpse	r21, r1
 7f0:	10 c1       	rjmp	.+544    	; 0xa12 <__fp_szero>
 7f2:	ca c0       	rjmp	.+404    	; 0x988 <__fp_nan>

000007f4 <__divsf3x>:
 7f4:	eb d0       	rcall	.+470    	; 0x9cc <__fp_split3>
 7f6:	98 f3       	brcs	.-26     	; 0x7de <__divsf3+0x4>

000007f8 <__divsf3_pse>:
 7f8:	99 23       	and	r25, r25
 7fa:	c9 f3       	breq	.-14     	; 0x7ee <__divsf3+0x14>
 7fc:	55 23       	and	r21, r21
 7fe:	b1 f3       	breq	.-20     	; 0x7ec <__divsf3+0x12>
 800:	95 1b       	sub	r25, r21
 802:	55 0b       	sbc	r21, r21
 804:	bb 27       	eor	r27, r27
 806:	aa 27       	eor	r26, r26
 808:	62 17       	cp	r22, r18
 80a:	73 07       	cpc	r23, r19
 80c:	84 07       	cpc	r24, r20
 80e:	38 f0       	brcs	.+14     	; 0x81e <__divsf3_pse+0x26>
 810:	9f 5f       	subi	r25, 0xFF	; 255
 812:	5f 4f       	sbci	r21, 0xFF	; 255
 814:	22 0f       	add	r18, r18
 816:	33 1f       	adc	r19, r19
 818:	44 1f       	adc	r20, r20
 81a:	aa 1f       	adc	r26, r26
 81c:	a9 f3       	breq	.-22     	; 0x808 <__divsf3_pse+0x10>
 81e:	33 d0       	rcall	.+102    	; 0x886 <__divsf3_pse+0x8e>
 820:	0e 2e       	mov	r0, r30
 822:	3a f0       	brmi	.+14     	; 0x832 <__divsf3_pse+0x3a>
 824:	e0 e8       	ldi	r30, 0x80	; 128
 826:	30 d0       	rcall	.+96     	; 0x888 <__divsf3_pse+0x90>
 828:	91 50       	subi	r25, 0x01	; 1
 82a:	50 40       	sbci	r21, 0x00	; 0
 82c:	e6 95       	lsr	r30
 82e:	00 1c       	adc	r0, r0
 830:	ca f7       	brpl	.-14     	; 0x824 <__divsf3_pse+0x2c>
 832:	29 d0       	rcall	.+82     	; 0x886 <__divsf3_pse+0x8e>
 834:	fe 2f       	mov	r31, r30
 836:	27 d0       	rcall	.+78     	; 0x886 <__divsf3_pse+0x8e>
 838:	66 0f       	add	r22, r22
 83a:	77 1f       	adc	r23, r23
 83c:	88 1f       	adc	r24, r24
 83e:	bb 1f       	adc	r27, r27
 840:	26 17       	cp	r18, r22
 842:	37 07       	cpc	r19, r23
 844:	48 07       	cpc	r20, r24
 846:	ab 07       	cpc	r26, r27
 848:	b0 e8       	ldi	r27, 0x80	; 128
 84a:	09 f0       	breq	.+2      	; 0x84e <__divsf3_pse+0x56>
 84c:	bb 0b       	sbc	r27, r27
 84e:	80 2d       	mov	r24, r0
 850:	bf 01       	movw	r22, r30
 852:	ff 27       	eor	r31, r31
 854:	93 58       	subi	r25, 0x83	; 131
 856:	5f 4f       	sbci	r21, 0xFF	; 255
 858:	2a f0       	brmi	.+10     	; 0x864 <__divsf3_pse+0x6c>
 85a:	9e 3f       	cpi	r25, 0xFE	; 254
 85c:	51 05       	cpc	r21, r1
 85e:	68 f0       	brcs	.+26     	; 0x87a <__divsf3_pse+0x82>
 860:	8d c0       	rjmp	.+282    	; 0x97c <__fp_inf>
 862:	d7 c0       	rjmp	.+430    	; 0xa12 <__fp_szero>
 864:	5f 3f       	cpi	r21, 0xFF	; 255
 866:	ec f3       	brlt	.-6      	; 0x862 <__divsf3_pse+0x6a>
 868:	98 3e       	cpi	r25, 0xE8	; 232
 86a:	dc f3       	brlt	.-10     	; 0x862 <__divsf3_pse+0x6a>
 86c:	86 95       	lsr	r24
 86e:	77 95       	ror	r23
 870:	67 95       	ror	r22
 872:	b7 95       	ror	r27
 874:	f7 95       	ror	r31
 876:	9f 5f       	subi	r25, 0xFF	; 255
 878:	c9 f7       	brne	.-14     	; 0x86c <__divsf3_pse+0x74>
 87a:	88 0f       	add	r24, r24
 87c:	91 1d       	adc	r25, r1
 87e:	96 95       	lsr	r25
 880:	87 95       	ror	r24
 882:	97 f9       	bld	r25, 7
 884:	08 95       	ret
 886:	e1 e0       	ldi	r30, 0x01	; 1
 888:	66 0f       	add	r22, r22
 88a:	77 1f       	adc	r23, r23
 88c:	88 1f       	adc	r24, r24
 88e:	bb 1f       	adc	r27, r27
 890:	62 17       	cp	r22, r18
 892:	73 07       	cpc	r23, r19
 894:	84 07       	cpc	r24, r20
 896:	ba 07       	cpc	r27, r26
 898:	20 f0       	brcs	.+8      	; 0x8a2 <__divsf3_pse+0xaa>
 89a:	62 1b       	sub	r22, r18
 89c:	73 0b       	sbc	r23, r19
 89e:	84 0b       	sbc	r24, r20
 8a0:	ba 0b       	sbc	r27, r26
 8a2:	ee 1f       	adc	r30, r30
 8a4:	88 f7       	brcc	.-30     	; 0x888 <__divsf3_pse+0x90>
 8a6:	e0 95       	com	r30
 8a8:	08 95       	ret

000008aa <__fixunssfsi>:
 8aa:	98 d0       	rcall	.+304    	; 0x9dc <__fp_splitA>
 8ac:	88 f0       	brcs	.+34     	; 0x8d0 <__fixunssfsi+0x26>
 8ae:	9f 57       	subi	r25, 0x7F	; 127
 8b0:	90 f0       	brcs	.+36     	; 0x8d6 <__fixunssfsi+0x2c>
 8b2:	b9 2f       	mov	r27, r25
 8b4:	99 27       	eor	r25, r25
 8b6:	b7 51       	subi	r27, 0x17	; 23
 8b8:	a0 f0       	brcs	.+40     	; 0x8e2 <__fixunssfsi+0x38>
 8ba:	d1 f0       	breq	.+52     	; 0x8f0 <__fixunssfsi+0x46>
 8bc:	66 0f       	add	r22, r22
 8be:	77 1f       	adc	r23, r23
 8c0:	88 1f       	adc	r24, r24
 8c2:	99 1f       	adc	r25, r25
 8c4:	1a f0       	brmi	.+6      	; 0x8cc <__fixunssfsi+0x22>
 8c6:	ba 95       	dec	r27
 8c8:	c9 f7       	brne	.-14     	; 0x8bc <__fixunssfsi+0x12>
 8ca:	12 c0       	rjmp	.+36     	; 0x8f0 <__fixunssfsi+0x46>
 8cc:	b1 30       	cpi	r27, 0x01	; 1
 8ce:	81 f0       	breq	.+32     	; 0x8f0 <__fixunssfsi+0x46>
 8d0:	9f d0       	rcall	.+318    	; 0xa10 <__fp_zero>
 8d2:	b1 e0       	ldi	r27, 0x01	; 1
 8d4:	08 95       	ret
 8d6:	9c c0       	rjmp	.+312    	; 0xa10 <__fp_zero>
 8d8:	67 2f       	mov	r22, r23
 8da:	78 2f       	mov	r23, r24
 8dc:	88 27       	eor	r24, r24
 8de:	b8 5f       	subi	r27, 0xF8	; 248
 8e0:	39 f0       	breq	.+14     	; 0x8f0 <__fixunssfsi+0x46>
 8e2:	b9 3f       	cpi	r27, 0xF9	; 249
 8e4:	cc f3       	brlt	.-14     	; 0x8d8 <__fixunssfsi+0x2e>
 8e6:	86 95       	lsr	r24
 8e8:	77 95       	ror	r23
 8ea:	67 95       	ror	r22
 8ec:	b3 95       	inc	r27
 8ee:	d9 f7       	brne	.-10     	; 0x8e6 <__fixunssfsi+0x3c>
 8f0:	3e f4       	brtc	.+14     	; 0x900 <__fixunssfsi+0x56>
 8f2:	90 95       	com	r25
 8f4:	80 95       	com	r24
 8f6:	70 95       	com	r23
 8f8:	61 95       	neg	r22
 8fa:	7f 4f       	sbci	r23, 0xFF	; 255
 8fc:	8f 4f       	sbci	r24, 0xFF	; 255
 8fe:	9f 4f       	sbci	r25, 0xFF	; 255
 900:	08 95       	ret

00000902 <__floatunsisf>:
 902:	e8 94       	clt
 904:	09 c0       	rjmp	.+18     	; 0x918 <__floatsisf+0x12>

00000906 <__floatsisf>:
 906:	97 fb       	bst	r25, 7
 908:	3e f4       	brtc	.+14     	; 0x918 <__floatsisf+0x12>
 90a:	90 95       	com	r25
 90c:	80 95       	com	r24
 90e:	70 95       	com	r23
 910:	61 95       	neg	r22
 912:	7f 4f       	sbci	r23, 0xFF	; 255
 914:	8f 4f       	sbci	r24, 0xFF	; 255
 916:	9f 4f       	sbci	r25, 0xFF	; 255
 918:	99 23       	and	r25, r25
 91a:	a9 f0       	breq	.+42     	; 0x946 <__floatsisf+0x40>
 91c:	f9 2f       	mov	r31, r25
 91e:	96 e9       	ldi	r25, 0x96	; 150
 920:	bb 27       	eor	r27, r27
 922:	93 95       	inc	r25
 924:	f6 95       	lsr	r31
 926:	87 95       	ror	r24
 928:	77 95       	ror	r23
 92a:	67 95       	ror	r22
 92c:	b7 95       	ror	r27
 92e:	f1 11       	cpse	r31, r1
 930:	f8 cf       	rjmp	.-16     	; 0x922 <__floatsisf+0x1c>
 932:	fa f4       	brpl	.+62     	; 0x972 <__floatsisf+0x6c>
 934:	bb 0f       	add	r27, r27
 936:	11 f4       	brne	.+4      	; 0x93c <__floatsisf+0x36>
 938:	60 ff       	sbrs	r22, 0
 93a:	1b c0       	rjmp	.+54     	; 0x972 <__floatsisf+0x6c>
 93c:	6f 5f       	subi	r22, 0xFF	; 255
 93e:	7f 4f       	sbci	r23, 0xFF	; 255
 940:	8f 4f       	sbci	r24, 0xFF	; 255
 942:	9f 4f       	sbci	r25, 0xFF	; 255
 944:	16 c0       	rjmp	.+44     	; 0x972 <__floatsisf+0x6c>
 946:	88 23       	and	r24, r24
 948:	11 f0       	breq	.+4      	; 0x94e <__floatsisf+0x48>
 94a:	96 e9       	ldi	r25, 0x96	; 150
 94c:	11 c0       	rjmp	.+34     	; 0x970 <__floatsisf+0x6a>
 94e:	77 23       	and	r23, r23
 950:	21 f0       	breq	.+8      	; 0x95a <__floatsisf+0x54>
 952:	9e e8       	ldi	r25, 0x8E	; 142
 954:	87 2f       	mov	r24, r23
 956:	76 2f       	mov	r23, r22
 958:	05 c0       	rjmp	.+10     	; 0x964 <__floatsisf+0x5e>
 95a:	66 23       	and	r22, r22
 95c:	71 f0       	breq	.+28     	; 0x97a <__floatsisf+0x74>
 95e:	96 e8       	ldi	r25, 0x86	; 134
 960:	86 2f       	mov	r24, r22
 962:	70 e0       	ldi	r23, 0x00	; 0
 964:	60 e0       	ldi	r22, 0x00	; 0
 966:	2a f0       	brmi	.+10     	; 0x972 <__floatsisf+0x6c>
 968:	9a 95       	dec	r25
 96a:	66 0f       	add	r22, r22
 96c:	77 1f       	adc	r23, r23
 96e:	88 1f       	adc	r24, r24
 970:	da f7       	brpl	.-10     	; 0x968 <__floatsisf+0x62>
 972:	88 0f       	add	r24, r24
 974:	96 95       	lsr	r25
 976:	87 95       	ror	r24
 978:	97 f9       	bld	r25, 7
 97a:	08 95       	ret

0000097c <__fp_inf>:
 97c:	97 f9       	bld	r25, 7
 97e:	9f 67       	ori	r25, 0x7F	; 127
 980:	80 e8       	ldi	r24, 0x80	; 128
 982:	70 e0       	ldi	r23, 0x00	; 0
 984:	60 e0       	ldi	r22, 0x00	; 0
 986:	08 95       	ret

00000988 <__fp_nan>:
 988:	9f ef       	ldi	r25, 0xFF	; 255
 98a:	80 ec       	ldi	r24, 0xC0	; 192
 98c:	08 95       	ret

0000098e <__fp_pscA>:
 98e:	00 24       	eor	r0, r0
 990:	0a 94       	dec	r0
 992:	16 16       	cp	r1, r22
 994:	17 06       	cpc	r1, r23
 996:	18 06       	cpc	r1, r24
 998:	09 06       	cpc	r0, r25
 99a:	08 95       	ret

0000099c <__fp_pscB>:
 99c:	00 24       	eor	r0, r0
 99e:	0a 94       	dec	r0
 9a0:	12 16       	cp	r1, r18
 9a2:	13 06       	cpc	r1, r19
 9a4:	14 06       	cpc	r1, r20
 9a6:	05 06       	cpc	r0, r21
 9a8:	08 95       	ret

000009aa <__fp_round>:
 9aa:	09 2e       	mov	r0, r25
 9ac:	03 94       	inc	r0
 9ae:	00 0c       	add	r0, r0
 9b0:	11 f4       	brne	.+4      	; 0x9b6 <__fp_round+0xc>
 9b2:	88 23       	and	r24, r24
 9b4:	52 f0       	brmi	.+20     	; 0x9ca <__fp_round+0x20>
 9b6:	bb 0f       	add	r27, r27
 9b8:	40 f4       	brcc	.+16     	; 0x9ca <__fp_round+0x20>
 9ba:	bf 2b       	or	r27, r31
 9bc:	11 f4       	brne	.+4      	; 0x9c2 <__fp_round+0x18>
 9be:	60 ff       	sbrs	r22, 0
 9c0:	04 c0       	rjmp	.+8      	; 0x9ca <__fp_round+0x20>
 9c2:	6f 5f       	subi	r22, 0xFF	; 255
 9c4:	7f 4f       	sbci	r23, 0xFF	; 255
 9c6:	8f 4f       	sbci	r24, 0xFF	; 255
 9c8:	9f 4f       	sbci	r25, 0xFF	; 255
 9ca:	08 95       	ret

000009cc <__fp_split3>:
 9cc:	57 fd       	sbrc	r21, 7
 9ce:	90 58       	subi	r25, 0x80	; 128
 9d0:	44 0f       	add	r20, r20
 9d2:	55 1f       	adc	r21, r21
 9d4:	59 f0       	breq	.+22     	; 0x9ec <__fp_splitA+0x10>
 9d6:	5f 3f       	cpi	r21, 0xFF	; 255
 9d8:	71 f0       	breq	.+28     	; 0x9f6 <__fp_splitA+0x1a>
 9da:	47 95       	ror	r20

000009dc <__fp_splitA>:
 9dc:	88 0f       	add	r24, r24
 9de:	97 fb       	bst	r25, 7
 9e0:	99 1f       	adc	r25, r25
 9e2:	61 f0       	breq	.+24     	; 0x9fc <__fp_splitA+0x20>
 9e4:	9f 3f       	cpi	r25, 0xFF	; 255
 9e6:	79 f0       	breq	.+30     	; 0xa06 <__fp_splitA+0x2a>
 9e8:	87 95       	ror	r24
 9ea:	08 95       	ret
 9ec:	12 16       	cp	r1, r18
 9ee:	13 06       	cpc	r1, r19
 9f0:	14 06       	cpc	r1, r20
 9f2:	55 1f       	adc	r21, r21
 9f4:	f2 cf       	rjmp	.-28     	; 0x9da <__fp_split3+0xe>
 9f6:	46 95       	lsr	r20
 9f8:	f1 df       	rcall	.-30     	; 0x9dc <__fp_splitA>
 9fa:	08 c0       	rjmp	.+16     	; 0xa0c <__fp_splitA+0x30>
 9fc:	16 16       	cp	r1, r22
 9fe:	17 06       	cpc	r1, r23
 a00:	18 06       	cpc	r1, r24
 a02:	99 1f       	adc	r25, r25
 a04:	f1 cf       	rjmp	.-30     	; 0x9e8 <__fp_splitA+0xc>
 a06:	86 95       	lsr	r24
 a08:	71 05       	cpc	r23, r1
 a0a:	61 05       	cpc	r22, r1
 a0c:	08 94       	sec
 a0e:	08 95       	ret

00000a10 <__fp_zero>:
 a10:	e8 94       	clt

00000a12 <__fp_szero>:
 a12:	bb 27       	eor	r27, r27
 a14:	66 27       	eor	r22, r22
 a16:	77 27       	eor	r23, r23
 a18:	cb 01       	movw	r24, r22
 a1a:	97 f9       	bld	r25, 7
 a1c:	08 95       	ret

00000a1e <__mulsf3>:
 a1e:	0b d0       	rcall	.+22     	; 0xa36 <__mulsf3x>
 a20:	c4 cf       	rjmp	.-120    	; 0x9aa <__fp_round>
 a22:	b5 df       	rcall	.-150    	; 0x98e <__fp_pscA>
 a24:	28 f0       	brcs	.+10     	; 0xa30 <__mulsf3+0x12>
 a26:	ba df       	rcall	.-140    	; 0x99c <__fp_pscB>
 a28:	18 f0       	brcs	.+6      	; 0xa30 <__mulsf3+0x12>
 a2a:	95 23       	and	r25, r21
 a2c:	09 f0       	breq	.+2      	; 0xa30 <__mulsf3+0x12>
 a2e:	a6 cf       	rjmp	.-180    	; 0x97c <__fp_inf>
 a30:	ab cf       	rjmp	.-170    	; 0x988 <__fp_nan>
 a32:	11 24       	eor	r1, r1
 a34:	ee cf       	rjmp	.-36     	; 0xa12 <__fp_szero>

00000a36 <__mulsf3x>:
 a36:	ca df       	rcall	.-108    	; 0x9cc <__fp_split3>
 a38:	a0 f3       	brcs	.-24     	; 0xa22 <__mulsf3+0x4>

00000a3a <__mulsf3_pse>:
 a3a:	95 9f       	mul	r25, r21
 a3c:	d1 f3       	breq	.-12     	; 0xa32 <__mulsf3+0x14>
 a3e:	95 0f       	add	r25, r21
 a40:	50 e0       	ldi	r21, 0x00	; 0
 a42:	55 1f       	adc	r21, r21
 a44:	62 9f       	mul	r22, r18
 a46:	f0 01       	movw	r30, r0
 a48:	72 9f       	mul	r23, r18
 a4a:	bb 27       	eor	r27, r27
 a4c:	f0 0d       	add	r31, r0
 a4e:	b1 1d       	adc	r27, r1
 a50:	63 9f       	mul	r22, r19
 a52:	aa 27       	eor	r26, r26
 a54:	f0 0d       	add	r31, r0
 a56:	b1 1d       	adc	r27, r1
 a58:	aa 1f       	adc	r26, r26
 a5a:	64 9f       	mul	r22, r20
 a5c:	66 27       	eor	r22, r22
 a5e:	b0 0d       	add	r27, r0
 a60:	a1 1d       	adc	r26, r1
 a62:	66 1f       	adc	r22, r22
 a64:	82 9f       	mul	r24, r18
 a66:	22 27       	eor	r18, r18
 a68:	b0 0d       	add	r27, r0
 a6a:	a1 1d       	adc	r26, r1
 a6c:	62 1f       	adc	r22, r18
 a6e:	73 9f       	mul	r23, r19
 a70:	b0 0d       	add	r27, r0
 a72:	a1 1d       	adc	r26, r1
 a74:	62 1f       	adc	r22, r18
 a76:	83 9f       	mul	r24, r19
 a78:	a0 0d       	add	r26, r0
 a7a:	61 1d       	adc	r22, r1
 a7c:	22 1f       	adc	r18, r18
 a7e:	74 9f       	mul	r23, r20
 a80:	33 27       	eor	r19, r19
 a82:	a0 0d       	add	r26, r0
 a84:	61 1d       	adc	r22, r1
 a86:	23 1f       	adc	r18, r19
 a88:	84 9f       	mul	r24, r20
 a8a:	60 0d       	add	r22, r0
 a8c:	21 1d       	adc	r18, r1
 a8e:	82 2f       	mov	r24, r18
 a90:	76 2f       	mov	r23, r22
 a92:	6a 2f       	mov	r22, r26
 a94:	11 24       	eor	r1, r1
 a96:	9f 57       	subi	r25, 0x7F	; 127
 a98:	50 40       	sbci	r21, 0x00	; 0
 a9a:	8a f0       	brmi	.+34     	; 0xabe <__mulsf3_pse+0x84>
 a9c:	e1 f0       	breq	.+56     	; 0xad6 <__mulsf3_pse+0x9c>
 a9e:	88 23       	and	r24, r24
 aa0:	4a f0       	brmi	.+18     	; 0xab4 <__mulsf3_pse+0x7a>
 aa2:	ee 0f       	add	r30, r30
 aa4:	ff 1f       	adc	r31, r31
 aa6:	bb 1f       	adc	r27, r27
 aa8:	66 1f       	adc	r22, r22
 aaa:	77 1f       	adc	r23, r23
 aac:	88 1f       	adc	r24, r24
 aae:	91 50       	subi	r25, 0x01	; 1
 ab0:	50 40       	sbci	r21, 0x00	; 0
 ab2:	a9 f7       	brne	.-22     	; 0xa9e <__mulsf3_pse+0x64>
 ab4:	9e 3f       	cpi	r25, 0xFE	; 254
 ab6:	51 05       	cpc	r21, r1
 ab8:	70 f0       	brcs	.+28     	; 0xad6 <__mulsf3_pse+0x9c>
 aba:	60 cf       	rjmp	.-320    	; 0x97c <__fp_inf>
 abc:	aa cf       	rjmp	.-172    	; 0xa12 <__fp_szero>
 abe:	5f 3f       	cpi	r21, 0xFF	; 255
 ac0:	ec f3       	brlt	.-6      	; 0xabc <__mulsf3_pse+0x82>
 ac2:	98 3e       	cpi	r25, 0xE8	; 232
 ac4:	dc f3       	brlt	.-10     	; 0xabc <__mulsf3_pse+0x82>
 ac6:	86 95       	lsr	r24
 ac8:	77 95       	ror	r23
 aca:	67 95       	ror	r22
 acc:	b7 95       	ror	r27
 ace:	f7 95       	ror	r31
 ad0:	e7 95       	ror	r30
 ad2:	9f 5f       	subi	r25, 0xFF	; 255
 ad4:	c1 f7       	brne	.-16     	; 0xac6 <__mulsf3_pse+0x8c>
 ad6:	fe 2b       	or	r31, r30
 ad8:	88 0f       	add	r24, r24
 ada:	91 1d       	adc	r25, r1
 adc:	96 95       	lsr	r25
 ade:	87 95       	ror	r24
 ae0:	97 f9       	bld	r25, 7
 ae2:	08 95       	ret

00000ae4 <__mulsi3>:
 ae4:	62 9f       	mul	r22, r18
 ae6:	d0 01       	movw	r26, r0
 ae8:	73 9f       	mul	r23, r19
 aea:	f0 01       	movw	r30, r0
 aec:	82 9f       	mul	r24, r18
 aee:	e0 0d       	add	r30, r0
 af0:	f1 1d       	adc	r31, r1
 af2:	64 9f       	mul	r22, r20
 af4:	e0 0d       	add	r30, r0
 af6:	f1 1d       	adc	r31, r1
 af8:	92 9f       	mul	r25, r18
 afa:	f0 0d       	add	r31, r0
 afc:	83 9f       	mul	r24, r19
 afe:	f0 0d       	add	r31, r0
 b00:	74 9f       	mul	r23, r20
 b02:	f0 0d       	add	r31, r0
 b04:	65 9f       	mul	r22, r21
 b06:	f0 0d       	add	r31, r0
 b08:	99 27       	eor	r25, r25
 b0a:	72 9f       	mul	r23, r18
 b0c:	b0 0d       	add	r27, r0
 b0e:	e1 1d       	adc	r30, r1
 b10:	f9 1f       	adc	r31, r25
 b12:	63 9f       	mul	r22, r19
 b14:	b0 0d       	add	r27, r0
 b16:	e1 1d       	adc	r30, r1
 b18:	f9 1f       	adc	r31, r25
 b1a:	bd 01       	movw	r22, r26
 b1c:	cf 01       	movw	r24, r30
 b1e:	11 24       	eor	r1, r1
 b20:	08 95       	ret

00000b22 <__udivmodsi4>:
 b22:	a1 e2       	ldi	r26, 0x21	; 33
 b24:	1a 2e       	mov	r1, r26
 b26:	aa 1b       	sub	r26, r26
 b28:	bb 1b       	sub	r27, r27
 b2a:	fd 01       	movw	r30, r26
 b2c:	0d c0       	rjmp	.+26     	; 0xb48 <__udivmodsi4_ep>

00000b2e <__udivmodsi4_loop>:
 b2e:	aa 1f       	adc	r26, r26
 b30:	bb 1f       	adc	r27, r27
 b32:	ee 1f       	adc	r30, r30
 b34:	ff 1f       	adc	r31, r31
 b36:	a2 17       	cp	r26, r18
 b38:	b3 07       	cpc	r27, r19
 b3a:	e4 07       	cpc	r30, r20
 b3c:	f5 07       	cpc	r31, r21
 b3e:	20 f0       	brcs	.+8      	; 0xb48 <__udivmodsi4_ep>
 b40:	a2 1b       	sub	r26, r18
 b42:	b3 0b       	sbc	r27, r19
 b44:	e4 0b       	sbc	r30, r20
 b46:	f5 0b       	sbc	r31, r21

00000b48 <__udivmodsi4_ep>:
 b48:	66 1f       	adc	r22, r22
 b4a:	77 1f       	adc	r23, r23
 b4c:	88 1f       	adc	r24, r24
 b4e:	99 1f       	adc	r25, r25
 b50:	1a 94       	dec	r1
 b52:	69 f7       	brne	.-38     	; 0xb2e <__udivmodsi4_loop>
 b54:	60 95       	com	r22
 b56:	70 95       	com	r23
 b58:	80 95       	com	r24
 b5a:	90 95       	com	r25
 b5c:	9b 01       	movw	r18, r22
 b5e:	ac 01       	movw	r20, r24
 b60:	bd 01       	movw	r22, r26
 b62:	cf 01       	movw	r24, r30
 b64:	08 95       	ret

00000b66 <_exit>:
 b66:	f8 94       	cli

00000b68 <__stop_program>:
 b68:	ff cf       	rjmp	.-2      	; 0xb68 <__stop_program>
